$comment
TOOL:	simvision	14.10-p001
$end

$date
    Mar 20, 2015 13:41:02
$end

$timescale
    100ps
$end


$scope module tb_mips $end
$var integer 32 ! DataMem[0] $end
$var integer 32 " DataMem[1] $end
$var integer 32 # DataMem[2] $end
$var integer 32 $ DataMem[3] $end
$var integer 32 % DataMem[4] $end
$var integer 32 & DataMem[5] $end
$var integer 32 ' DataMem[6] $end
$var integer 32 ( DataMem[7] $end
$var integer 32 ) DataMem[8] $end
$var integer 32 * DataMem[9] $end
$var integer 32 + DataMem[10] $end
$var integer 32 , DataMem[11] $end
$var integer 32 - DataMem[12] $end
$var integer 32 . DataMem[13] $end
$var integer 32 / DataMem[14] $end
$var integer 32 0 DataMem[15] $end
$var integer 32 1 DataMem[16] $end
$var integer 32 2 DataMem[17] $end
$var integer 32 3 DataMem[18] $end
$var integer 32 4 DataMem[19] $end
$var integer 32 5 DataMem[20] $end
$var integer 32 6 DataMem[21] $end
$var integer 32 7 DataMem[22] $end
$var integer 32 8 DataMem[23] $end
$var integer 32 9 DataMem[24] $end
$var integer 32 : DataMem[25] $end
$var integer 32 ; DataMem[26] $end
$var integer 32 < DataMem[27] $end
$var integer 32 = DataMem[28] $end
$var integer 32 > DataMem[29] $end
$var integer 32 ? DataMem[30] $end
$var integer 32 @ DataMem[31] $end
$var integer 32 A DataMem[32] $end
$var integer 32 B DataMem[33] $end
$var integer 32 C DataMem[34] $end
$var integer 32 D DataMem[35] $end
$var integer 32 E DataMem[36] $end
$var integer 32 F DataMem[37] $end
$var integer 32 G DataMem[38] $end
$var integer 32 H DataMem[39] $end
$var integer 32 I DataMem[40] $end
$var integer 32 J DataMem[41] $end
$var integer 32 K DataMem[42] $end
$var integer 32 L DataMem[43] $end
$var integer 32 M DataMem[44] $end
$var integer 32 N DataMem[45] $end
$var integer 32 O DataMem[46] $end
$var integer 32 P DataMem[47] $end
$var integer 32 Q DataMem[48] $end
$var integer 32 R DataMem[49] $end
$var integer 32 S DataMem[50] $end
$var integer 32 T DataMem[51] $end
$var integer 32 U DataMem[52] $end
$var integer 32 V DataMem[53] $end
$var integer 32 W DataMem[54] $end
$var integer 32 X DataMem[55] $end
$var integer 32 Y DataMem[56] $end
$var integer 32 Z DataMem[57] $end
$var integer 32 [ DataMem[58] $end
$var integer 32 \ DataMem[59] $end
$var integer 32 ] DataMem[60] $end
$var integer 32 ^ DataMem[61] $end
$var integer 32 _ DataMem[62] $end
$var integer 32 ` DataMem[63] $end
$var integer 32 a DataMem[64] $end
$var integer 32 b DataMem[65] $end
$var integer 32 c DataMem[66] $end
$var integer 32 d DataMem[67] $end
$var integer 32 e DataMem[68] $end
$var integer 32 f DataMem[69] $end
$var integer 32 g DataMem[70] $end
$var integer 32 h DataMem[71] $end
$var integer 32 i DataMem[72] $end
$var integer 32 j DataMem[73] $end
$var integer 32 k DataMem[74] $end
$var integer 32 l DataMem[75] $end
$var integer 32 m DataMem[76] $end
$var integer 32 n DataMem[77] $end
$var integer 32 o DataMem[78] $end
$var integer 32 p DataMem[79] $end
$var integer 32 q DataMem[80] $end
$var integer 32 r DataMem[81] $end
$var integer 32 s DataMem[82] $end
$var integer 32 t DataMem[83] $end
$var integer 32 u DataMem[84] $end
$var integer 32 v DataMem[85] $end
$var integer 32 w DataMem[86] $end
$var integer 32 x DataMem[87] $end
$var integer 32 y DataMem[88] $end
$var integer 32 z DataMem[89] $end
$var integer 32 { DataMem[90] $end
$var integer 32 | DataMem[91] $end
$var integer 32 } DataMem[92] $end
$var integer 32 ~ DataMem[93] $end
$var integer 32 !! DataMem[94] $end
$var integer 32 "! DataMem[95] $end
$var integer 32 #! DataMem[96] $end
$var integer 32 $! DataMem[97] $end
$var integer 32 %! DataMem[98] $end
$var integer 32 &! DataMem[99] $end
$var integer 32 '! DataMem[100] $end
$var integer 32 (! DataMem[101] $end
$var integer 32 )! DataMem[102] $end
$var integer 32 *! DataMem[103] $end
$var integer 32 +! DataMem[104] $end
$var integer 32 ,! DataMem[105] $end
$var integer 32 -! DataMem[106] $end
$var integer 32 .! DataMem[107] $end
$var integer 32 /! DataMem[108] $end
$var integer 32 0! DataMem[109] $end
$var integer 32 1! DataMem[110] $end
$var integer 32 2! DataMem[111] $end
$var integer 32 3! DataMem[112] $end
$var integer 32 4! DataMem[113] $end
$var integer 32 5! DataMem[114] $end
$var integer 32 6! DataMem[115] $end
$var integer 32 7! DataMem[116] $end
$var integer 32 8! DataMem[117] $end
$var integer 32 9! DataMem[118] $end
$var integer 32 :! DataMem[119] $end
$var integer 32 ;! DataMem[120] $end
$var integer 32 <! DataMem[121] $end
$var integer 32 =! DataMem[122] $end
$var integer 32 >! DataMem[123] $end
$var integer 32 ?! DataMem[124] $end
$var integer 32 @! DataMem[125] $end
$var integer 32 A! DataMem[126] $end
$var integer 32 B! DataMem[127] $end
$var integer 32 C! DataMem[128] $end
$var integer 32 D! DataMem[129] $end
$var integer 32 E! DataMem[130] $end
$var integer 32 F! DataMem[131] $end
$var integer 32 G! DataMem[132] $end
$var integer 32 H! DataMem[133] $end
$var integer 32 I! DataMem[134] $end
$var integer 32 J! DataMem[135] $end
$var integer 32 K! DataMem[136] $end
$var integer 32 L! DataMem[137] $end
$var integer 32 M! DataMem[138] $end
$var integer 32 N! DataMem[139] $end
$var integer 32 O! DataMem[140] $end
$var integer 32 P! DataMem[141] $end
$var integer 32 Q! DataMem[142] $end
$var integer 32 R! DataMem[143] $end
$var integer 32 S! DataMem[144] $end
$var integer 32 T! DataMem[145] $end
$var integer 32 U! DataMem[146] $end
$var integer 32 V! DataMem[147] $end
$var integer 32 W! DataMem[148] $end
$var integer 32 X! DataMem[149] $end
$var integer 32 Y! DataMem[150] $end
$var integer 32 Z! DataMem[151] $end
$var integer 32 [! DataMem[152] $end
$var integer 32 \! DataMem[153] $end
$var integer 32 ]! DataMem[154] $end
$var integer 32 ^! DataMem[155] $end
$var integer 32 _! DataMem[156] $end
$var integer 32 `! DataMem[157] $end
$var integer 32 a! DataMem[158] $end
$var integer 32 b! DataMem[159] $end
$var integer 32 c! DataMem[160] $end
$var integer 32 d! DataMem[161] $end
$var integer 32 e! DataMem[162] $end
$var integer 32 f! DataMem[163] $end
$var integer 32 g! DataMem[164] $end
$var integer 32 h! DataMem[165] $end
$var integer 32 i! DataMem[166] $end
$var integer 32 j! DataMem[167] $end
$var integer 32 k! DataMem[168] $end
$var integer 32 l! DataMem[169] $end
$var integer 32 m! DataMem[170] $end
$var integer 32 n! DataMem[171] $end
$var integer 32 o! DataMem[172] $end
$var integer 32 p! DataMem[173] $end
$var integer 32 q! DataMem[174] $end
$var integer 32 r! DataMem[175] $end
$var integer 32 s! DataMem[176] $end
$var integer 32 t! DataMem[177] $end
$var integer 32 u! DataMem[178] $end
$var integer 32 v! DataMem[179] $end
$var integer 32 w! DataMem[180] $end
$var integer 32 x! DataMem[181] $end
$var integer 32 y! DataMem[182] $end
$var integer 32 z! DataMem[183] $end
$var integer 32 {! DataMem[184] $end
$var integer 32 |! DataMem[185] $end
$var integer 32 }! DataMem[186] $end
$var integer 32 ~! DataMem[187] $end
$var integer 32 !" DataMem[188] $end
$var integer 32 "" DataMem[189] $end
$var integer 32 #" DataMem[190] $end
$var integer 32 $" DataMem[191] $end
$var integer 32 %" DataMem[192] $end
$var integer 32 &" DataMem[193] $end
$var integer 32 '" DataMem[194] $end
$var integer 32 (" DataMem[195] $end
$var integer 32 )" DataMem[196] $end
$var integer 32 *" DataMem[197] $end
$var integer 32 +" DataMem[198] $end
$var integer 32 ," DataMem[199] $end
$var integer 32 -" DataMem[200] $end
$var integer 32 ." DataMem[201] $end
$var integer 32 /" DataMem[202] $end
$var integer 32 0" DataMem[203] $end
$var integer 32 1" DataMem[204] $end
$var integer 32 2" DataMem[205] $end
$var integer 32 3" DataMem[206] $end
$var integer 32 4" DataMem[207] $end
$var integer 32 5" DataMem[208] $end
$var integer 32 6" DataMem[209] $end
$var integer 32 7" DataMem[210] $end
$var integer 32 8" DataMem[211] $end
$var integer 32 9" DataMem[212] $end
$var integer 32 :" DataMem[213] $end
$var integer 32 ;" DataMem[214] $end
$var integer 32 <" DataMem[215] $end
$var integer 32 =" DataMem[216] $end
$var integer 32 >" DataMem[217] $end
$var integer 32 ?" DataMem[218] $end
$var integer 32 @" DataMem[219] $end
$var integer 32 A" DataMem[220] $end
$var integer 32 B" DataMem[221] $end
$var integer 32 C" DataMem[222] $end
$var integer 32 D" DataMem[223] $end
$var integer 32 E" DataMem[224] $end
$var integer 32 F" DataMem[225] $end
$var integer 32 G" DataMem[226] $end
$var integer 32 H" DataMem[227] $end
$var integer 32 I" DataMem[228] $end
$var integer 32 J" DataMem[229] $end
$var integer 32 K" DataMem[230] $end
$var integer 32 L" DataMem[231] $end
$var integer 32 M" DataMem[232] $end
$var integer 32 N" DataMem[233] $end
$var integer 32 O" DataMem[234] $end
$var integer 32 P" DataMem[235] $end
$var integer 32 Q" DataMem[236] $end
$var integer 32 R" DataMem[237] $end
$var integer 32 S" DataMem[238] $end
$var integer 32 T" DataMem[239] $end
$var integer 32 U" DataMem[240] $end
$var integer 32 V" DataMem[241] $end
$var integer 32 W" DataMem[242] $end
$var integer 32 X" DataMem[243] $end
$var integer 32 Y" DataMem[244] $end
$var integer 32 Z" DataMem[245] $end
$var integer 32 [" DataMem[246] $end
$var integer 32 \" DataMem[247] $end
$var integer 32 ]" DataMem[248] $end
$var integer 32 ^" DataMem[249] $end
$var integer 32 _" DataMem[250] $end
$var integer 32 `" DataMem[251] $end
$var integer 32 a" DataMem[252] $end
$var integer 32 b" DataMem[253] $end
$var integer 32 c" DataMem[254] $end
$var integer 32 d" DataMem[255] $end
$upscope $end

$enddefinitions $end
#0
$dumpvars
bx !
bx "
bx #
bx $
bx %
bx &
bx '
bx (
bx )
bx *
bx +
bx ,
bx -
bx .
bx /
bx 0
bx 1
bx 2
bx 3
bx 4
bx 5
bx 6
bx 7
bx 8
bx 9
bx :
bx ;
bx <
bx =
bx >
bx ?
bx @
bx A
bx B
bx C
bx D
bx E
bx F
bx G
bx H
bx I
bx J
bx K
bx L
bx M
bx N
bx O
bx P
bx Q
bx R
bx S
bx T
bx U
bx V
bx W
bx X
bx Y
bx Z
bx [
bx \
bx ]
bx ^
bx _
bx `
bx a
bx b
bx c
bx d
bx e
bx f
bx g
bx h
bx i
bx j
bx k
bx l
bx m
bx n
bx o
bx p
bx q
bx r
bx s
bx t
bx u
bx v
bx w
bx x
bx y
bx z
bx {
bx |
bx }
bx ~
bx !!
bx "!
bx #!
bx $!
bx %!
bx &!
bx '!
bx (!
bx )!
bx *!
bx +!
bx ,!
bx -!
bx .!
bx /!
bx 0!
bx 1!
bx 2!
bx 3!
bx 4!
bx 5!
bx 6!
bx 7!
bx 8!
bx 9!
bx :!
bx ;!
bx <!
bx =!
bx >!
bx ?!
bx @!
bx A!
bx B!
bx C!
bx D!
bx E!
bx F!
bx G!
bx H!
bx I!
bx J!
bx K!
bx L!
bx M!
bx N!
bx O!
bx P!
bx Q!
bx R!
bx S!
bx T!
bx U!
bx V!
bx W!
bx X!
bx Y!
bx Z!
bx [!
bx \!
bx ]!
bx ^!
bx _!
bx `!
bx a!
bx b!
bx c!
bx d!
bx e!
bx f!
bx g!
bx h!
bx i!
bx j!
bx k!
bx l!
bx m!
bx n!
bx o!
bx p!
bx q!
bx r!
bx s!
bx t!
bx u!
bx v!
bx w!
bx x!
bx y!
bx z!
bx {!
bx |!
bx }!
bx ~!
bx !"
bx ""
bx #"
bx $"
bx %"
bx &"
bx '"
bx ("
bx )"
bx *"
bx +"
bx ,"
bx -"
bx ."
bx /"
bx 0"
bx 1"
bx 2"
bx 3"
bx 4"
bx 5"
bx 6"
bx 7"
bx 8"
bx 9"
bx :"
bx ;"
bx <"
bx ="
bx >"
bx ?"
bx @"
bx A"
bx B"
bx C"
bx D"
bx E"
bx F"
bx G"
bx H"
bx I"
bx J"
bx K"
bx L"
bx M"
bx N"
bx O"
bx P"
bx Q"
bx R"
bx S"
bx T"
bx U"
bx V"
bx W"
bx X"
bx Y"
bx Z"
bx ["
bx \"
bx ]"
bx ^"
bx _"
bx `"
bx a"
bx b"
bx c"
bx d"
$end
#50
b0 !
b1000 "
b111 $
b1110 (
b11 0
b10 1
b101 )
b1 2
b1010 %
b1010 *
b10 +
b1001 #
b110 &
b1101 ,
b1100 -
b100 '
b1011 .
b1111 /
#1250
b1000 #
#1350
b1001 "
#1550
b1000 "
#1650
b1001 #
#2250
b1001 $
#2350
b111 #
#3050
b1001 %
#3150
b1010 $
#3350
b1001 $
#3450
b1010 %
#4050
b1010 &
#4150
b110 %
#4850
b1010 '
#4950
b100 &
#5650
b1010 (
#5750
b1110 '
#5950
b1010 '
#6050
b1110 (
#6650
b1110 )
#6750
b101 (
#8550
b1000 #
#8650
b111 "
#9350
b1000 $
#9450
b1001 #
#9650
b1000 #
#9750
b1001 $
#10350
b1001 %
#10450
b110 $
#11150
b1001 &
#11250
b100 %
#11950
b1001 '
#12050
b1010 &
#12250
b1001 &
#12350
b1010 '
#12950
b1010 (
#13050
b101 '
#13750
b1010 )
#13850
b1110 (
#14050
b1010 (
#14150
b1110 )
#15850
b111 #
#15950
b1000 "
#16150
b111 "
#16250
b1000 #
#16850
b1000 $
#16950
b110 #
#17650
b1000 %
#17750
b100 $
#18450
b1000 &
#18550
b1001 %
#18750
b1000 %
#18850
b1001 &
#19450
b1001 '
#19550
b101 &
#20250
b1001 (
#20350
b1010 '
#20550
b1001 '
#20650
b1010 (
#21250
b1010 )
#21350
b1110 (
#21550
b1010 (
#21650
b1110 )
#23350
b111 #
#23450
b110 "
#24150
b111 $
#24250
b100 #
#24950
b111 %
#25050
b1000 $
#25250
b111 $
#25350
b1000 %
#25950
b1000 &
#26050
b101 %
#26750
b1000 '
#26850
b1001 &
#27050
b1000 &
#27150
b1001 '
#27750
b1001 (
#27850
b1010 '
#28050
b1001 '
#28150
b1010 (
#28750
b1010 )
#28850
b1110 (
#29050
b1010 (
#29150
b1110 )
#30850
b110 #
#30950
b100 "
#31650
b110 $
#31750
b111 #
#31950
b110 #
#32050
b111 $
#32650
b111 %
#32750
b101 $
#33450
b111 &
#33550
b1000 %
#33750
b111 %
#33850
b1000 &
#34450
b1000 '
#34550
b1001 &
#34750
b1000 &
#34850
b1001 '
#35450
b1001 (
#35550
b1010 '
#35750
b1001 '
#35850
b1010 (
#36450
b1010 )
#36550
b1110 (
#36750
b1010 (
#36850
b1110 )
#38550
b100 #
#38650
b110 "
#38850
b100 "
#38950
b110 #
#39550
b110 $
#39650
b101 #
#40350
b110 %
#40450
b111 $
#40650
b110 $
#40750
b111 %
#41350
b111 &
#41450
b1000 %
#41650
b111 %
#41750
b1000 &
#42350
b1000 '
#42450
b1001 &
#42650
b1000 &
#42750
b1001 '
#43350
b1001 (
#43450
b1010 '
#43650
b1001 '
#43750
b1010 (
#44350
b1010 )
#44450
b1110 (
#44650
b1010 (
#44750
b1110 )
#46450
b100 #
#46550
b101 "
#46750
b100 "
#46850
b101 #
#47450
b101 $
#47550
b110 #
#47750
b101 #
#47850
b110 $
#48450
b110 %
#48550
b111 $
#48750
b110 $
#48850
b111 %
#49450
b111 &
#49550
b1000 %
#49750
b111 %
#49850
b1000 &
#50450
b1000 '
#50550
b1001 &
#50750
b1000 &
#50850
b1001 '
#51450
b1001 (
#51550
b1010 '
#51750
b1001 '
#51850
b1010 (
#52450
b1010 )
#52550
b1110 (
#52750
b1010 (
#52850
b1110 )
#54550
b100 #
#54650
b101 "
#54850
b100 "
#54950
b101 #
#55550
b101 $
#55650
b110 #
#55850
b101 #
#55950
b110 $
#56150
